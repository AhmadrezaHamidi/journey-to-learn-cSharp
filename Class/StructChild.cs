using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Class
{
    internal struct PointStructChild
    {
        public double X { get; }
        public double Y { get; }

        public PointStructChild(double x, double y) => (X, Y) = (x, y);
    }


//    در C#، "struct" (که به عنوان "ساختار" ترجمه می‌شود) یک نوع داده‌ای ساختاری می‌باشد. ساختارها (structs) برای ذخیره داده‌ها با ساختار ساده و بدون رفتار (متدها) استفاده می‌شوند. در مقایسه با کلاس‌ها، ساختارها به صورت مقدار (Value Type) در حافظه ذخیره می‌شوند و به همین دلیل برای داده‌های ساده و کوچک بهینه هستند. 

//ویژگی‌های ساختارها در C# عبارتند از:

//1. ** ذخیره‌سازی به عنوان مقدار(Value Type) :** ساختارها به صورت مستقل در حافظه ذخیره می‌شوند.هر شیء از یک ساختار به عنوان یک کپی مستقل در حافظه قرار می‌گیرد.

//2. **کاربرد برای داده‌های ساده:** ساختارها برای ذخیره داده‌های ساده مانند اعداد صحیح، رشته‌ها، تاریخ‌ها و داده‌های مشابه کاربرد دارند.

//3. **بدون توانایی ارث‌بری:** ساختارها نمی‌توانند از ساختارهای دیگر بهره‌برداری کنند و از هیچ کلاس یا ساختار دیگری ارث‌بری نمی‌کنند.

//4. **بدون متدها (عملیات):** ساختارها به طور عمومی متدها (عملیات) را ندارند و تنها داده‌ها را ذخیره می‌کنند.

//5. **سازنده پیشفرض (Default Constructor):** هر ساختار یک سازنده پیشفرض دارد که تمام اعضای آن را مقداردهی اولیه می‌کند.

//ساختارها معمولاً برای بهینه‌سازی حافظه و سرعت در مواردی کاربرد دارند که داده‌ها به صورت ساده و مستقل از یکدیگر نیاز دارند، و هیچ نیازی به ایجاد رفتارهای پیچیده ندارند. به عنوان مثال، شما می‌توانید از یک ساختار برای نگهداری مختصات یک نقطه در فضای سه‌بعدی یا تاریخ و زمان استفاده کنید.


}
